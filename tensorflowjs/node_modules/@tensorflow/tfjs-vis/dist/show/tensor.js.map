{"version":3,"file":"tensor.js","sourceRoot":"","sources":["../../src/show/tensor.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;;;;;;;;;AAIH,mDAA8C;AAC9C,yDAAmD;AAEnD,uCAAyC;AAEzC;;;;;;;;;;;;GAYG;AACH,SAAsB,kBAAkB,CAAC,SAAmB,EAAE,MAAc;;QAC1E,MAAM,QAAQ,GAAG,0BAAW,CAAC,SAAS,CAAC,CAAC;QACxC,MAAM,KAAK,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,CAAC;QACxC,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACnC,qBAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;IACpD,CAAC;CAAA;AALD,gDAKC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs-core';\n\nimport {histogram} from '../render/histogram';\nimport {getDrawArea} from '../render/render_utils';\nimport {Drawable} from '../types';\nimport {tensorStats} from '../util/math';\n\n/**\n * Shows a histogram with the distribution of all values in a given tensor.\n *\n * ```js\n * const tensor = tf.tensor1d([0, 0, 0, 0, 2, 3, 4]);\n *\n * const surface = {name: 'Values Distribution', tab: 'Model Inspection'};\n * await tfvis.show.valuesDistribution(surface, tensor);\n * ```\n *\n * @doc {heading: 'Models & Tensors', subheading: 'Model Inspection', namespace:\n * 'show'}\n */\nexport async function valuesDistribution(container: Drawable, tensor: Tensor) {\n  const drawArea = getDrawArea(container);\n  const stats = await tensorStats(tensor);\n  const values = await tensor.data();\n  histogram(drawArea, values, {height: 150, stats});\n}\n"]}