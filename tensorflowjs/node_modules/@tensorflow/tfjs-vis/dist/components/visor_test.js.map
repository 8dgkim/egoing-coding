{"version":3,"file":"visor_test.js","sourceRoot":"","sources":["../../src/components/visor_test.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport { h } from 'preact';\nimport { render } from 'preact-render-spy';\n\nimport { VisorComponent } from './visor';\nimport { SurfaceInfoStrict } from '../types';\n\nafterEach(() => {\n  document.body.innerHTML = '';\n});\n\ndescribe('Visor Component', () => {\n  it('renders an empty visor', () => {\n    const wrapper = render(\n      <VisorComponent surfaceList={[]} />\n    );\n\n    expect(wrapper.find('.visor').length).toBe(1);\n    expect(wrapper.find('.visor-surfaces').length).toBe(1);\n    expect(wrapper.find('.tf-surface').length).toBe(0);\n    expect(wrapper.state().isOpen).toBe(true);\n    expect(wrapper.state().isFullscreen).toBe(false);\n  });\n\n  it('renders an empty and closed visor', () => {\n    const wrapper = render(\n      <VisorComponent\n        surfaceList={[]}\n        startOpen={false}\n      />\n    );\n\n    expect(wrapper.find('.visor').length).toBe(1);\n    expect(wrapper.state().isOpen).toBe(false);\n    expect(wrapper.state().isFullscreen).toBe(false);\n  });\n\n  it('renders a surface', () => {\n    const surfaceList: SurfaceInfoStrict[] = [\n      { name: 'surface 1', tab: 'tab 1' },\n    ];\n\n    const wrapper = render(\n      <VisorComponent surfaceList={surfaceList} />\n    );\n\n    expect(wrapper.find('.tf-surface').length).toBe(1);\n    expect(wrapper.find('.tf-surface').text()).toMatch('surface 1');\n    expect(wrapper.find('.tf-tab').length).toBe(1);\n    expect(wrapper.find('.tf-tab').text()).toMatch('tab 1');\n  });\n\n  it('switches tabs on click', () => {\n    const surfaceList: SurfaceInfoStrict[] = [\n      { name: 'surface 1', tab: 'tab 1' },\n      { name: 'surface 2', tab: 'tab 2' },\n    ];\n\n    const wrapper = render(\n      <VisorComponent surfaceList={surfaceList} />\n    );\n\n    expect(wrapper.find('.tf-tab').length).toBe(2);\n    expect(wrapper.state().activeTab).toEqual('tab 2');\n\n    // Clicks\n    wrapper.find('.tf-tab').at(0).simulate('click');\n    expect(wrapper.state().activeTab).toEqual('tab 1');\n    expect(wrapper.find('.tf-tab').at(0).attr('data-isactive' as never))\n      .toEqual(true);\n    expect(wrapper.find('.tf-tab').at(1).attr('data-isactive' as never))\n      .toEqual(false);\n\n    expect(wrapper.find('.tf-surface').at(0).attr('data-visible' as never))\n      .toEqual(true);\n    expect(wrapper.find('.tf-surface').at(1).attr('data-visible' as never))\n      .toEqual(false);\n\n    wrapper.find('.tf-tab').at(1).simulate('click');\n    expect(wrapper.state().activeTab).toEqual('tab 2');\n    expect(wrapper.find('.tf-tab').at(0).attr('data-isactive' as never))\n      .toEqual(false);\n    expect(wrapper.find('.tf-tab').at(1).attr('data-isactive' as never))\n      .toEqual(true);\n\n    expect(wrapper.find('.tf-surface').at(0).attr('data-visible' as never))\n      .toEqual(false);\n    expect(wrapper.find('.tf-surface').at(1).attr('data-visible' as never))\n      .toEqual(true);\n  });\n\n  it('hides on close button click', () => {\n    const surfaceList: SurfaceInfoStrict[] = [];\n\n    const wrapper = render(\n      <VisorComponent surfaceList={surfaceList} />\n    );\n\n    expect(wrapper.state().isOpen).toEqual(true);\n\n    const hideButton = wrapper.find('.visor-controls').children().at(1);\n    expect(hideButton.text()).toEqual('Hide');\n\n    hideButton.simulate('click');\n    expect(wrapper.state().isOpen).toEqual(false);\n  });\n\n  it('maximises and minimizes', () => {\n    const surfaceList: SurfaceInfoStrict[] = [];\n\n    const wrapper = render(\n      <VisorComponent surfaceList={surfaceList} />\n    );\n\n    expect(wrapper.state().isOpen).toEqual(true);\n\n    let toggleButton;\n    toggleButton = wrapper.find('.visor-controls').children().at(0);\n    expect(toggleButton.text()).toEqual('Maximize');\n    expect(wrapper.state().isFullscreen).toEqual(false);\n    expect(wrapper.find('.visor').at(0).attr('data-isfullscreen' as never))\n      .toEqual(false);\n\n    toggleButton.simulate('click');\n    toggleButton = wrapper.find('.visor-controls').children().at(0);\n    expect(toggleButton.text()).toEqual('Minimize');\n    expect(wrapper.state().isFullscreen).toEqual(true);\n    expect(wrapper.find('.visor').at(0).attr('data-isfullscreen' as never))\n      .toEqual(true);\n  });\n});\n"]}