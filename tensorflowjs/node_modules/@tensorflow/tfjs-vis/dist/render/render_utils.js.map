{"version":3,"file":"render_utils.js","sourceRoot":"","sources":["../../src/render/render_utils.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;;;;;;;;;AAEH,oCAA4D;AAC5D,oCAA+B;AAE/B,SAAgB,WAAW,CAAC,QAAkB;IAC5C,IAAI,QAAQ,YAAY,WAAW,EAAE;QACnC,OAAO,QAAQ,CAAC;KACjB;SAAM,IAAI,iBAAS,CAAC,QAAQ,CAAC,EAAE;QAC9B,OAAO,QAAQ,CAAC,QAAQ,CAAC;KAC1B;SAAM,IAAI,qBAAa,CAAC,QAAQ,CAAC,EAAE;QAClC,MAAM,OAAO,GAAG,aAAK,EAAE,CAAC,OAAO,CAC3B,EAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAC,CAAC,CAAC;QACvE,OAAO,OAAO,CAAC,QAAQ,CAAC;KACzB;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;KACnC;AACH,CAAC;AAZD,kCAYC;AAED,SAAgB,aAAa;AACzB,kCAAkC;AAClC,CAAuB,EAAE,CAAuB;IAClD,MAAM,MAAM,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;IAC7C,MAAM,MAAM,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;IAE7C,IAAI,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE;QACnC,OAAO,KAAK,CAAC;KACd;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE;YACvB,OAAO,KAAK,CAAC;SACd;KACF;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAlBD,sCAkBC;AAED,SAAsB,SAAS;;QAC7B,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;CAAA;AAFD,8BAEC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Drawable, isSurface, isSurfaceInfo} from '../types';\nimport {visor} from '../visor';\n\nexport function getDrawArea(drawable: Drawable): HTMLElement {\n  if (drawable instanceof HTMLElement) {\n    return drawable;\n  } else if (isSurface(drawable)) {\n    return drawable.drawArea;\n  } else if (isSurfaceInfo(drawable)) {\n    const surface = visor().surface(\n        {name: drawable.name, tab: drawable.tab, styles: drawable.styles});\n    return surface.drawArea;\n  } else {\n    throw new Error('Not a drawable');\n  }\n}\n\nexport function shallowEquals(\n    // tslint:disable-next-line:no-any\n    a: {[key: string]: any}, b: {[key: string]: any}) {\n  const aProps = Object.getOwnPropertyNames(a);\n  const bProps = Object.getOwnPropertyNames(b);\n\n  if (aProps.length !== bProps.length) {\n    return false;\n  }\n\n  for (let i = 0; i < aProps.length; i++) {\n    const prop = aProps[i];\n    if (a[prop] !== b[prop]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport async function nextFrame() {\n  await new Promise(r => requestAnimationFrame(r));\n}\n"]}