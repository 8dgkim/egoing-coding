{"version":3,"file":"histogram_test.js","sourceRoot":"","sources":["../../src/render/histogram_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {HistogramStats} from '../types';\n\nimport {histogram} from './histogram';\n\ndescribe('renderHistogram', () => {\n  let pixelRatio: number;\n\n  beforeEach(() => {\n    document.body.innerHTML = '<div id=\"container\"></div>';\n    pixelRatio = window.devicePixelRatio;\n  });\n\n  it('renders a histogram', async () => {\n    const data = [\n      {value: 50},\n      {value: 100},\n      {value: 100},\n    ];\n\n    const container = document.getElementById('container');\n    await histogram(container, data);\n\n    expect(document.querySelectorAll('.vega-embed').length).toBe(1);\n    expect(document.querySelectorAll('table').length).toBe(1);\n    expect(document.querySelectorAll('table thead tr').length).toBe(1);\n    expect(document.querySelectorAll('table thead th').length).toBe(6);\n    expect(document.querySelectorAll('table tbody tr').length).toBe(1);\n    expect(document.querySelectorAll('table tbody td').length).toBe(6);\n  });\n\n  it('renders a histogram with number array', async () => {\n    const data = [50, 100, 100];\n\n    const container = document.getElementById('container');\n    await histogram(container, data);\n\n    expect(document.querySelectorAll('.vega-embed').length).toBe(1);\n    expect(document.querySelectorAll('table').length).toBe(1);\n    expect(document.querySelectorAll('table thead tr').length).toBe(1);\n    expect(document.querySelectorAll('table thead th').length).toBe(6);\n    expect(document.querySelectorAll('table tbody tr').length).toBe(1);\n    expect(document.querySelectorAll('table tbody td').length).toBe(6);\n  });\n\n  it('renders a histogram with typed array', async () => {\n    const data = new Int32Array([50, 100, 100]);\n\n    const container = document.getElementById('container');\n    await histogram(container, data);\n\n    expect(document.querySelectorAll('.vega-embed').length).toBe(1);\n    expect(document.querySelectorAll('table').length).toBe(1);\n    expect(document.querySelectorAll('table thead tr').length).toBe(1);\n    expect(document.querySelectorAll('table thead th').length).toBe(6);\n    expect(document.querySelectorAll('table tbody tr').length).toBe(1);\n    expect(document.querySelectorAll('table tbody td').length).toBe(6);\n  });\n\n  it('re-renders a histogram', async () => {\n    const data = [\n      {value: 50},\n      {value: 100},\n      {value: 100},\n    ];\n\n    const container = document.getElementById('container');\n\n    await histogram(container, data);\n    expect(document.querySelectorAll('.vega-embed').length).toBe(1);\n\n    await histogram(container, data);\n    expect(document.querySelectorAll('.vega-embed').length).toBe(1);\n  });\n\n  it('updates a histogram chart', async () => {\n    let data = [\n      {value: 50},\n      {value: 100},\n      {value: 100},\n    ];\n\n    const container = document.getElementById('container');\n\n    await histogram(container, data);\n    expect(document.querySelectorAll('.vega-embed').length).toBe(1);\n\n    data = [\n      {value: 150},\n      {value: 100},\n      {value: 150},\n    ];\n\n    await histogram(container, data);\n    expect(document.querySelectorAll('.vega-embed').length).toBe(1);\n  });\n\n  it('renders correct stats', async () => {\n    const data = [\n      {value: 50},\n      {value: -100},\n      {value: 200},\n      {value: 0},\n      {value: 0},\n      {value: NaN},\n      {value: NaN},\n      {value: NaN},\n    ];\n\n    const container = document.getElementById('container');\n    await histogram(container, data);\n\n    expect(document.querySelectorAll('.vega-embed').length).toBe(1);\n    expect(document.querySelectorAll('table').length).toBe(1);\n    expect(document.querySelectorAll('table tbody tr').length).toBe(1);\n\n    const statsEls = document.querySelectorAll('table tbody td');\n    expect(statsEls.length).toBe(6);\n    expect(statsEls[0].textContent).toEqual('8');\n    expect(statsEls[1].textContent).toEqual('-100');\n    expect(statsEls[2].textContent).toEqual('200');\n    expect(statsEls[3].textContent).toEqual('2 (25%)');\n    expect(statsEls[4].textContent).toEqual('3 (37.5%)');\n  });\n\n  it('does not throw on empty data', async () => {\n    const data: Array<{value: number}> = [];\n\n    const container = document.getElementById('container');\n    expect(async () => {\n      await histogram(container, data);\n    }).not.toThrow();\n\n    expect(document.querySelectorAll('.vega-embed').length).toBe(0);\n    expect(document.querySelectorAll('table').length).toBe(1);\n    expect(document.querySelectorAll('table thead tr').length).toBe(1);\n    expect(document.querySelectorAll('table thead th').length).toBe(3);\n  });\n\n  it('renders custom stats', async () => {\n    const data = [\n      {value: 50},\n    ];\n\n    const stats: HistogramStats = {\n      numVals: 200,\n      min: -30,\n      max: 140,\n      numZeros: 2,\n      numNans: 5,\n    };\n\n    const container = document.getElementById('container');\n    await histogram(container, data, {stats});\n\n    expect(document.querySelectorAll('.vega-embed').length).toBe(1);\n    expect(document.querySelectorAll('table').length).toBe(1);\n    expect(document.querySelectorAll('table tbody tr').length).toBe(1);\n\n    const statsEls = document.querySelectorAll('table tbody td');\n    expect(statsEls.length).toBe(5);\n    expect(statsEls[0].textContent).toEqual('200');\n    expect(statsEls[1].textContent).toEqual('-30');\n    expect(statsEls[2].textContent).toEqual('140');\n    expect(statsEls[3].textContent).toEqual('2 (1%)');\n    expect(statsEls[4].textContent).toEqual('5 (2.5%)');\n  });\n\n  it('sets width of chart', async () => {\n    const data = [\n      {value: 50},\n      {value: 100},\n      {value: 230},\n    ];\n\n    const container = document.getElementById('container');\n    await histogram(container, data, {width: 400});\n\n    expect(document.querySelectorAll('.vega-embed').length).toBe(1);\n    expect(document.querySelectorAll('canvas').length).toBe(1);\n    expect(document.querySelector('canvas').width).toBe(400 * pixelRatio);\n  });\n\n  it('sets height of chart', async () => {\n    const data = [\n      {value: 50},\n      {value: 100},\n      {value: 230},\n    ];\n\n    const container = document.getElementById('container');\n    await histogram(container, data, {height: 200});\n\n    expect(document.querySelectorAll('.vega-embed').length).toBe(1);\n    expect(document.querySelectorAll('canvas').length).toBe(1);\n    expect(document.querySelector('canvas').height).toBe(200 * pixelRatio);\n  });\n});\n"]}