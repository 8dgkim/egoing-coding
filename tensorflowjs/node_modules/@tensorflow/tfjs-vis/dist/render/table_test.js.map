{"version":3,"file":"table_test.js","sourceRoot":"","sources":["../../src/render/table_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {table} from './table';\n\nfunction getRowHTML(row: Element) {\n  return Array.from(row.querySelectorAll('td')).map(r => r.innerHTML);\n}\n\nfunction getRowText(row: Element) {\n  return Array.from(row.querySelectorAll('td')).map(r => r.textContent);\n}\n\ndescribe('renderTable', () => {\n  beforeEach(() => {\n    document.body.innerHTML = '<div id=\"container\"></div>';\n  });\n\n  it('renders a table', () => {\n    const headers = [\n      'Col1',\n      'Col 2',\n      '<em>Column 3</em>',\n    ];\n\n    const values = [\n      [1, 2, 3],\n      ['4', '5', '6'],\n      ['<strong>7</strong>', true, false],\n    ];\n\n    const container = document.getElementById('container');\n    table(container, {headers, values});\n\n    expect(document.querySelectorAll('.tf-table').length).toBe(1);\n    expect(document.querySelectorAll('.tf-table thead tr').length).toBe(1);\n\n    const headerEl = document.querySelectorAll('.tf-table thead tr th');\n    expect(headerEl[0].innerHTML).toEqual('Col1');\n    expect(headerEl[1].innerHTML).toEqual('Col 2');\n    expect(headerEl[2].innerHTML).toEqual('<em>Column 3</em>');\n    expect(headerEl[2].textContent).toEqual('Column 3');\n\n    expect(document.querySelectorAll('.tf-table tbody tr').length).toBe(3);\n\n    const rows = document.querySelectorAll('.tf-table tbody tr');\n    expect(getRowHTML(rows[0])).toEqual(['1', '2', '3']);\n    expect(getRowHTML(rows[1])).toEqual(['4', '5', '6']);\n    expect(getRowHTML(rows[2])).toEqual([\n      '<strong>7</strong>', 'true', 'false'\n    ]);\n    expect(getRowText(rows[2])).toEqual(['7', 'true', 'false']);\n  });\n\n  it('requires necessary param', () => {\n    const container = document.getElementById('container');\n\n    // @ts-ignore\n    expect(() => table({headers: []}, container)).toThrow();\n    // @ts-ignore\n    expect(() => table({values: [[]]}, container)).toThrow();\n    // @ts-ignore\n    expect(() => table({}, container)).toThrow();\n  });\n\n  it('should not throw on empty table', () => {\n    const container = document.getElementById('container');\n    const headers: string[] = [];\n    const values: string[][] = [];\n\n    expect(() => table(container, {headers, values})).not.toThrow();\n\n    expect(document.querySelectorAll('.tf-table').length).toBe(1);\n    expect(document.querySelectorAll('.tf-table thead tr').length).toBe(1);\n    expect(document.querySelectorAll('.tf-table tbody tr').length).toBe(0);\n  });\n});\n"]}