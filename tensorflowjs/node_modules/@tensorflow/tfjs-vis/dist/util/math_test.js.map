{"version":3,"file":"math_test.js","sourceRoot":"","sources":["../../src/util/math_test.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;;;;;;;;;;;;;;;;AAEH,0DAA4C;AAE5C,iCAA4F;AAC5F,mCAAgD;AAEhD,EAAE;AACF,aAAa;AACb,EAAE;AACF,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACnC,aAAa;QACb,MAAM,CAAC,GAAG,EAAE,CAAC,iBAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAC9B,MAAM,KAAK,GAAG,iBAAU,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAChC,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACnD,MAAM,KAAK,GAAG,iBAAU,CAAC,IAAI,CAAC,CAAC;QAE/B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAC7B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC/C,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QAC7C,MAAM,KAAK,GAAG,iBAAU,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAC7B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC5C,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1B,MAAM,KAAK,GAAG,iBAAU,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC3C,MAAM,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAClC,MAAM,KAAK,GAAG,iBAAU,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC5C,MAAM,IAAI,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAC/C,MAAM,KAAK,GAAG,iBAAU,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,EAAE;AACF,cAAc;AACd,EAAE;AACF,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,EAAE,CAAC,wBAAwB,EAAE,GAAS,EAAE;QACtC,MAAM,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9D,MAAM,KAAK,GAAG,MAAM,kBAAW,CAAC,IAAI,CAAC,CAAC;QAEtC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,GAAS,EAAE;QACrD,MAAM,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QACxD,MAAM,KAAK,GAAG,MAAM,kBAAW,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,GAAS,EAAE;QAClD,MAAM,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACrC,MAAM,KAAK,GAAG,MAAM,kBAAW,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,GAAS,EAAE;QACjD,MAAM,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QAC7C,MAAM,KAAK,GAAG,MAAM,kBAAW,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,GAAS,EAAE;QAClD,MAAM,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QAC1D,MAAM,KAAK,GAAG,MAAM,kBAAW,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,EAAE;AACF,kBAAkB;AAClB,EAAE;AACF,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,EAAE,CAAC,6BAA6B,EAAE,GAAS,EAAE;QAC3C,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtC,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE3C,MAAM,QAAQ,GAAG;YACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SAChB,CAAC;QAEF,MAAM,MAAM,GAAG,MAAM,sBAAe,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAC1D,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE,GAAS,EAAE;QACpE,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtC,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,UAAU,GAAG,CAAC,CAAC;QAErB,MAAM,QAAQ,GAAG;YACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACnB,CAAC;QAEF,MAAM,MAAM,GAAG,MAAM,sBAAe,CAAC,MAAM,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;QACtE,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,iDAAiD,EAAE,GAAS,EAAE;QAC/D,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5C,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjD,MAAM,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE7C,MAAM,QAAQ,GAAG;YACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SAChB,CAAC;QAEF,MAAM,MAAM,GACR,MAAM,sBAAe,CAAC,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACnE,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,qEAAqE,EACrE,GAAS,EAAE;QACT,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3D,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEhE,MAAM,QAAQ,GAAG;YACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACtB,CAAC;QAEF,MAAM,MAAM,GAAG,MAAM,sBAAe,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAC1D,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAA,CAAC,CAAC;IAEN,EAAE,CAAC,mDAAmD,EAAE,GAAS,EAAE;QACjE,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtC,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE3C,MAAM,QAAQ,GAAG;YACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACtB,CAAC;QAEF,MAAM,MAAM,GAAG,MAAM,sBAAe,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAC1D,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,GAAS,EAAE;QAC7C,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE9C,IAAI,YAAY,CAAC;QACjB,IAAI;YACF,YAAY;YACZ,MAAM,sBAAe,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;SAC5C;QAAC,OAAO,CAAC,EAAE;YACV,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC;SAC1B;QAED,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;IAC7D,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,GAAS,EAAE;QAClD,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACzC,MAAM,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEpD,IAAI,YAAY,CAAC;QACjB,IAAI;YACF,YAAY;YACZ,MAAM,sBAAe,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;SAC5C;QAAC,OAAO,CAAC,EAAE;YACV,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC;SAC1B;QAED,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;IAClE,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,GAAS,EAAE;QACtD,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtC,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEjD,IAAI,YAAY,CAAC;QACjB,IAAI;YACF,YAAY;YACZ,MAAM,sBAAe,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;SAC5C;QAAC,OAAO,CAAC,EAAE;YACV,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC;SAC1B;QAED,MAAM,CAAC,YAAY,CAAC;aACf,OAAO,CAAC,gDAAgD,CAAC,CAAC;IACjE,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,EAAE;AACF,WAAW;AACX,EAAE;AACF,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,EAAE,CAAC,mBAAmB,EAAE,GAAS,EAAE;QACjC,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtC,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE3C,MAAM,MAAM,GAAG,MAAM,eAAQ,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACnD,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,EAAE,+BAAuB,CAAC,CAAC;IAC7D,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,GAAS,EAAE;QAC7C,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtC,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE3C,MAAM,MAAM,GAAG,MAAM,eAAQ,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACnD,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,+BAAuB,CAAC,CAAC;IACzD,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,GAAS,EAAE;QAC9C,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtC,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE3C,MAAM,MAAM,GAAG,MAAM,eAAQ,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACnD,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,+BAAuB,CAAC,CAAC;IACzD,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,GAAS,EAAE;QAC5C,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC;YACzB,CAAC,CAAC,EAAE,CAAC,CAAC;YACN,CAAC,CAAC,EAAE,CAAC,CAAC;YACN,CAAC,CAAC,EAAE,CAAC,CAAC;SACP,CAAC,CAAC;QACH,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC;YAC9B,CAAC,CAAC,EAAE,CAAC,CAAC;YACN,CAAC,CAAC,EAAE,CAAC,CAAC;YACN,CAAC,CAAC,EAAE,CAAC,CAAC;SACP,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,MAAM,eAAQ,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACnD,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,EAAE,+BAAuB,CAAC,CAAC;IAC7D,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,GAAS,EAAE;QACrD,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACzC,MAAM,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEpD,IAAI,YAAY,CAAC;QACjB,IAAI;YACF,YAAY;YACZ,MAAM,eAAQ,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;SACrC;QAAC,OAAO,CAAC,EAAE;YACV,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC;SAC1B;QAED,MAAM,CAAC,YAAY,CAAC;aACf,OAAO,CAAC,uDAAuD,CAAC,CAAC;IACxE,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,EAAE;AACF,WAAW;AACX,EAAE;AACF,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,6BAA6B,EAAE,GAAS,EAAE;QAC3C,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEpD,MAAM,MAAM,GAAG,MAAM,uBAAgB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,GAAS,EAAE;QACvD,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5C,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEjD,MAAM,MAAM,GAAG,MAAM,uBAAgB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,GAAS,EAAE;QACxD,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEpD,MAAM,MAAM,GAAG,MAAM,uBAAgB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE,GAAS,EAAE;QAChE,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACzC,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE9C,MAAM,MAAM,GAAG,MAAM,uBAAgB,CAAC,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,GAAS,EAAE;QAC7C,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE9C,IAAI,YAAY,CAAC;QACjB,IAAI;YACF,YAAY;YACZ,MAAM,uBAAgB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;SAC7C;QAAC,OAAO,CAAC,EAAE;YACV,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC;SAC1B;QAED,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;IAC7D,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,GAAS,EAAE;QAClD,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACzC,MAAM,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEpD,IAAI,YAAY,CAAC;QACjB,IAAI;YACF,YAAY;YACZ,MAAM,uBAAgB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;SAC7C;QAAC,OAAO,CAAC,EAAE;YACV,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC;SAC1B;QAED,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;IAClE,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,GAAS,EAAE;QACtD,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtC,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEjD,IAAI,YAAY,CAAC;QACjB,IAAI;YACF,YAAY;YACZ,MAAM,uBAAgB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;SAC7C;QAAC,OAAO,CAAC,EAAE;YACV,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC;SAC1B;QAED,MAAM,CAAC,YAAY,CAAC;aACf,OAAO,CAAC,gDAAgD,CAAC,CAAC;IACjE,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs-core';\n\nimport {accuracy, arrayStats, confusionMatrix, perClassAccuracy, tensorStats} from './math';\nimport {DECIMAL_PLACES_TO_CHECK} from './utils';\n\n//\n// arrayStats\n//\ndescribe('arrayStats', () => {\n  it('throws on non array input', () => {\n    // @ts-ignore\n    expect(() => arrayStats('string')).toThrow();\n  });\n\n  it('handles empty arrays', () => {\n    const stats = arrayStats([]);\n    expect(stats.max).toBe(undefined);\n    expect(stats.min).toBe(undefined);\n    expect(stats.numVals).toBe(0);\n    expect(stats.numNans).toBe(0);\n    expect(stats.numZeros).toBe(0);\n  });\n\n  it('computes correct stats', () => {\n    const data = [2, 3, -400, 500, NaN, -800, 0, 0, 0];\n    const stats = arrayStats(data);\n\n    expect(stats.max).toBe(500);\n    expect(stats.min).toBe(-800);\n    expect(stats.numVals).toBe(9);\n    expect(stats.numNans).toBe(1);\n    expect(stats.numZeros).toBe(3);\n  });\n\n  it('computes correct stats — all negative', () => {\n    const data = [-2, -3, -400, -500, NaN, -800];\n    const stats = arrayStats(data);\n    expect(stats.max).toBe(-2);\n    expect(stats.min).toBe(-800);\n    expect(stats.numVals).toBe(6);\n    expect(stats.numNans).toBe(1);\n    expect(stats.numZeros).toBe(0);\n  });\n\n  it('computes correct stats — all zeros', () => {\n    const data = [0, 0, 0, 0];\n    const stats = arrayStats(data);\n    expect(stats.max).toBe(0);\n    expect(stats.min).toBe(0);\n    expect(stats.numVals).toBe(4);\n    expect(stats.numNans).toBe(0);\n    expect(stats.numZeros).toBe(4);\n  });\n\n  it('computes correct stats — all NaNs', () => {\n    const data = [NaN, NaN, NaN, NaN];\n    const stats = arrayStats(data);\n    expect(isNaN(stats.max)).toBe(true);\n    expect(isNaN(stats.min)).toBe(true);\n    expect(stats.numVals).toBe(4);\n    expect(stats.numNans).toBe(4);\n    expect(stats.numZeros).toBe(0);\n  });\n\n  it('computes correct stats — some infs', () => {\n    const data = [10, 4, Infinity, -Infinity, NaN];\n    const stats = arrayStats(data);\n    expect(stats.max).toBe(Infinity);\n    expect(stats.min).toBe(-Infinity);\n    expect(stats.numVals).toBe(5);\n    expect(stats.numNans).toBe(1);\n    expect(stats.numZeros).toBe(0);\n    expect(stats.numInfs).toBe(2);\n  });\n});\n\n//\n// tensorStats\n//\ndescribe('tensorStats', () => {\n  it('computes correct stats', async () => {\n    const data = tf.tensor([2, 3, -400, 500, NaN, -800, 0, 0, 0]);\n    const stats = await tensorStats(data);\n\n    expect(stats.max).toBeCloseTo(500);\n    expect(stats.min).toBeCloseTo(-800);\n    expect(stats.numVals).toBe(9);\n    expect(stats.numNans).toBe(1);\n    expect(stats.numZeros).toBe(3);\n  });\n\n  it('computes correct stats — all negative', async () => {\n    const data = tf.tensor([-2, -3, -400, -500, NaN, -800]);\n    const stats = await tensorStats(data);\n    expect(stats.max).toBeCloseTo(-2);\n    expect(stats.min).toBeCloseTo(-800);\n    expect(stats.numVals).toBe(6);\n    expect(stats.numNans).toBe(1);\n    expect(stats.numZeros).toBe(0);\n  });\n\n  it('computes correct stats — all zeros', async () => {\n    const data = tf.tensor([0, 0, 0, 0]);\n    const stats = await tensorStats(data);\n    expect(stats.max).toBe(0);\n    expect(stats.min).toBe(0);\n    expect(stats.numVals).toBe(4);\n    expect(stats.numNans).toBe(0);\n    expect(stats.numZeros).toBe(4);\n  });\n\n  it('computes correct stats — all NaNs', async () => {\n    const data = tf.tensor([NaN, NaN, NaN, NaN]);\n    const stats = await tensorStats(data);\n    expect(isNaN(stats.max)).toBe(true);\n    expect(isNaN(stats.min)).toBe(true);\n    expect(stats.numVals).toBe(4);\n    expect(stats.numNans).toBe(4);\n    expect(stats.numZeros).toBe(0);\n  });\n\n  it('computes correct stats — some infs', async () => {\n    const data = tf.tensor([10, 4, Infinity, -Infinity, NaN]);\n    const stats = await tensorStats(data);\n    expect(stats.max).toBe(Infinity);\n    expect(stats.min).toBe(-Infinity);\n    expect(stats.numVals).toBe(5);\n    expect(stats.numNans).toBe(1);\n    expect(stats.numZeros).toBe(0);\n    expect(stats.numInfs).toBe(2);\n  });\n});\n\n//\n// confusionMatrix\n//\ndescribe('confusionMatrix', () => {\n  it('computes a confusion matrix', async () => {\n    const labels = tf.tensor1d([1, 2, 4]);\n    const predictions = tf.tensor1d([2, 2, 4]);\n\n    const expected = [\n      [0, 0, 0, 0, 0],\n      [0, 0, 1, 0, 0],\n      [0, 0, 1, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 1],\n    ];\n\n    const result = await confusionMatrix(labels, predictions);\n    expect(result).toEqual(expected);\n  });\n\n  it('computes a confusion matrix with explicit numClasses', async () => {\n    const labels = tf.tensor1d([1, 2, 4]);\n    const predictions = tf.tensor1d([2, 2, 4]);\n    const numClasses = 6;\n\n    const expected = [\n      [0, 0, 0, 0, 0, 0],\n      [0, 0, 1, 0, 0, 0],\n      [0, 0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 1, 0],\n      [0, 0, 0, 0, 0, 0],\n    ];\n\n    const result = await confusionMatrix(labels, predictions, numClasses);\n    expect(result).toEqual(expected);\n  });\n\n  it('computes a confusion matrix with custom weights', async () => {\n    const labels = tf.tensor1d([0, 1, 2, 3, 4]);\n    const predictions = tf.tensor1d([0, 1, 2, 3, 4]);\n    const weights = tf.tensor1d([0, 1, 2, 3, 4]);\n\n    const expected = [\n      [0, 0, 0, 0, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 2, 0, 0],\n      [0, 0, 0, 3, 0],\n      [0, 0, 0, 0, 4],\n    ];\n\n    const result =\n        await confusionMatrix(labels, predictions, undefined, weights);\n    expect(result).toEqual(expected);\n  });\n\n  it('computes a confusion matrix where preds and labels do not intersect',\n     async () => {\n       const labels = tf.tensor1d([1, 1, 2, 3, 5, 1, 3, 6, 3, 1]);\n       const predictions = tf.tensor1d([1, 1, 2, 3, 5, 6, 1, 2, 3, 4]);\n\n       const expected = [\n         [0, 0, 0, 0, 0, 0, 0],\n         [0, 2, 0, 0, 1, 0, 1],\n         [0, 0, 1, 0, 0, 0, 0],\n         [0, 1, 0, 2, 0, 0, 0],\n         [0, 0, 0, 0, 0, 0, 0],\n         [0, 0, 0, 0, 0, 1, 0],\n         [0, 0, 1, 0, 0, 0, 0],\n       ];\n\n       const result = await confusionMatrix(labels, predictions);\n       expect(result).toEqual(expected);\n     });\n\n  it('computes a confusion matrix with multiple matches', async () => {\n    const labels = tf.tensor1d([4, 5, 6]);\n    const predictions = tf.tensor1d([1, 2, 3]);\n\n    const expected = [\n      [0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0],\n      [0, 1, 0, 0, 0, 0, 0],\n      [0, 0, 1, 0, 0, 0, 0],\n      [0, 0, 0, 1, 0, 0, 0],\n    ];\n\n    const result = await confusionMatrix(labels, predictions);\n    expect(result).toEqual(expected);\n  });\n\n  it('errors on non 1d label tensor', async () => {\n    const labels = tf.tensor([1, 2, 4, 4], [2, 2]);\n    const predictions = tf.tensor1d([2, 2, 4, 3]);\n\n    let errorMessage;\n    try {\n      //@ts-ignore\n      await confusionMatrix(labels, predictions);\n    } catch (e) {\n      errorMessage = e.message;\n    }\n\n    expect(errorMessage).toEqual('labels must be a 1D tensor');\n  });\n\n  it('errors on non 1d prediction tensor', async () => {\n    const labels = tf.tensor1d([1, 2, 4, 4]);\n    const predictions = tf.tensor([2, 2, 4, 3], [2, 2]);\n\n    let errorMessage;\n    try {\n      //@ts-ignore\n      await confusionMatrix(labels, predictions);\n    } catch (e) {\n      errorMessage = e.message;\n    }\n\n    expect(errorMessage).toEqual('predictions must be a 1D tensor');\n  });\n\n  it('errors on tensors of different lengths', async () => {\n    const labels = tf.tensor1d([1, 2, 4]);\n    const predictions = tf.tensor1d([2, 2, 4, 3, 6]);\n\n    let errorMessage;\n    try {\n      //@ts-ignore\n      await confusionMatrix(labels, predictions);\n    } catch (e) {\n      errorMessage = e.message;\n    }\n\n    expect(errorMessage)\n        .toEqual('labels and predictions must be the same length');\n  });\n});\n\n//\n// accuracy\n//\ndescribe('accuracy', () => {\n  it('computes accuracy', async () => {\n    const labels = tf.tensor1d([1, 2, 4]);\n    const predictions = tf.tensor1d([2, 2, 4]);\n\n    const result = await accuracy(labels, predictions);\n    expect(result).toBeCloseTo(2 / 3, DECIMAL_PLACES_TO_CHECK);\n  });\n\n  it('computes accuracy, no matches', async () => {\n    const labels = tf.tensor1d([1, 2, 4]);\n    const predictions = tf.tensor1d([5, 6, 8]);\n\n    const result = await accuracy(labels, predictions);\n    expect(result).toBeCloseTo(0, DECIMAL_PLACES_TO_CHECK);\n  });\n\n  it('computes accuracy, all matches', async () => {\n    const labels = tf.tensor1d([1, 2, 3]);\n    const predictions = tf.tensor1d([1, 2, 3]);\n\n    const result = await accuracy(labels, predictions);\n    expect(result).toBeCloseTo(1, DECIMAL_PLACES_TO_CHECK);\n  });\n\n  it('computes accuracy, tensor 2d', async () => {\n    const labels = tf.tensor2d([\n      [1, 2],\n      [3, 4],\n      [5, 6],\n    ]);\n    const predictions = tf.tensor2d([\n      [1, 9],\n      [3, 4],\n      [5, 6],\n    ]);\n\n    const result = await accuracy(labels, predictions);\n    expect(result).toBeCloseTo(5 / 6, DECIMAL_PLACES_TO_CHECK);\n  });\n\n  it('errors on tensors of different shapes', async () => {\n    const labels = tf.tensor1d([1, 2, 4, 4]);\n    const predictions = tf.tensor([2, 2, 4, 3], [2, 2]);\n\n    let errorMessage;\n    try {\n      //@ts-ignore\n      await accuracy(labels, predictions);\n    } catch (e) {\n      errorMessage = e.message;\n    }\n\n    expect(errorMessage)\n        .toEqual('Error computing accuracy. Shapes 4 and 2,2 must match');\n  });\n});\n\n//\n// accuracy\n//\ndescribe('per class accuracy', () => {\n  it('computes per class accuracy', async () => {\n    const labels = tf.tensor1d([0, 0, 1, 2, 2, 2]);\n    const predictions = tf.tensor1d([0, 0, 0, 2, 1, 1]);\n\n    const result = await perClassAccuracy(labels, predictions);\n    expect(result.map(d => d.accuracy)).toEqual([1, 0, 1 / 3]);\n    expect(result.map(d => d.count)).toEqual([2, 1, 3]);\n  });\n\n  it('computes per class accuracy, no matches', async () => {\n    const labels = tf.tensor1d([1, 1, 1, 1, 1]);\n    const predictions = tf.tensor1d([0, 0, 0, 0, 0]);\n\n    const result = await perClassAccuracy(labels, predictions);\n    expect(result.map(d => d.accuracy)).toEqual([0, 0]);\n    expect(result.map(d => d.count)).toEqual([0, 5]);\n  });\n\n  it('computes per class accuracy, all matches', async () => {\n    const labels = tf.tensor1d([0, 1, 2, 3, 3, 3]);\n    const predictions = tf.tensor1d([0, 1, 2, 3, 3, 3]);\n\n    const result = await perClassAccuracy(labels, predictions);\n    expect(result.map(d => d.accuracy)).toEqual([1, 1, 1, 1]);\n    expect(result.map(d => d.count)).toEqual([1, 1, 1, 3]);\n  });\n\n  it('computes per class accuracy, explicit numClasses', async () => {\n    const labels = tf.tensor1d([0, 1, 2, 2]);\n    const predictions = tf.tensor1d([0, 1, 2, 1]);\n\n    const result = await perClassAccuracy(labels, predictions, 5);\n    expect(result.map(d => d.accuracy)).toEqual([1, 1, 0.5, 0, 0]);\n    expect(result.map(d => d.count)).toEqual([1, 1, 2, 0, 0]);\n  });\n\n  it('errors on non 1d label tensor', async () => {\n    const labels = tf.tensor([1, 2, 4, 4], [2, 2]);\n    const predictions = tf.tensor1d([2, 2, 4, 3]);\n\n    let errorMessage;\n    try {\n      //@ts-ignore\n      await perClassAccuracy(labels, predictions);\n    } catch (e) {\n      errorMessage = e.message;\n    }\n\n    expect(errorMessage).toEqual('labels must be a 1D tensor');\n  });\n\n  it('errors on non 1d prediction tensor', async () => {\n    const labels = tf.tensor1d([1, 2, 4, 4]);\n    const predictions = tf.tensor([2, 2, 4, 3], [2, 2]);\n\n    let errorMessage;\n    try {\n      //@ts-ignore\n      await perClassAccuracy(labels, predictions);\n    } catch (e) {\n      errorMessage = e.message;\n    }\n\n    expect(errorMessage).toEqual('predictions must be a 1D tensor');\n  });\n\n  it('errors on tensors of different lengths', async () => {\n    const labels = tf.tensor1d([1, 2, 4]);\n    const predictions = tf.tensor1d([2, 2, 4, 3, 6]);\n\n    let errorMessage;\n    try {\n      //@ts-ignore\n      await perClassAccuracy(labels, predictions);\n    } catch (e) {\n      errorMessage = e.message;\n    }\n\n    expect(errorMessage)\n        .toEqual('labels and predictions must be the same length');\n  });\n});\n"]}